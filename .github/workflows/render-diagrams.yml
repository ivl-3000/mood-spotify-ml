name: Render Mermaid diagrams

on:
  push:
    paths:
      - 'docs/diagrams/*.mmd'
      - 'docs/Architecture.md'
      - 'docs/ERD.md'
      - '.github/workflows/render-diagrams.yml'
  workflow_dispatch: {}

jobs:
  render:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Mermaid CLI
        run: |
          npm -g config set fund false
          npm -g config set audit false
          npm -g install @mermaid-js/mermaid-cli

      - name: Render diagrams to PNG
        run: |
          mkdir -p docs/diagrams/img
          mmdc -i docs/diagrams/spotify_system.mmd -o docs/diagrams/img/spotify_system.png -b transparent || true
          mmdc -i docs/diagrams/mood_reco_workflow.mmd -o docs/diagrams/img/mood_reco_workflow.png -b transparent || true
          mmdc -i docs/diagrams/spotify_erd.mmd -o docs/diagrams/img/spotify_erd.png -b transparent || true
          mmdc -e png -i <(printf '%s' "flowchart LR
  U[Users & Clients] --> API[API Gateway]
  API --> PLAY[Playback]
  API --> SEARCH[Search]
  API --> PLAYLIST[Playlist]
  API --> RECO[Recommendations API]

  PLAY & SEARCH & PLAYLIST --> K[(Kafka)]
  K --> SPROC[Stream Proc]
  SPROC --> FEATS[Feature Store]

  DB[(OLTP)] --> FEATS
  FEATS --> TRAIN[Model Training]
  TRAIN --> REG[Model Registry] --> RANK[Online Ranker] --> RECO

  RECO --> DASH[Predictions/Telemetry]
  DASH --> BI[Power BI]
") -o docs/diagrams/img/spotify_workflow.png -b transparent || true

      - name: Commit PNGs
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'ci: render Mermaid diagrams to PNG'
          file_pattern: docs/diagrams/img/*.png
